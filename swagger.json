{
  "openapi": "3.0.1",
  "info": {
    "title": "Payment Gateway",
    "description": "A payment gateway that allows merchants to offer their shoppers a secure way to pay for their products",
    "termsOfService": "https://github.com/KarimDarwish/payment-gateway",
    "contact": {
      "name": "Karim Darwish",
      "url": "https://github.com/KarimDarwish/payment-gateway"
    },
    "version": "v1"
  },
  "paths": {
    "/api/payments": {
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Processes a new payment from a shopper",
        "operationId": "ProcessNewPayment",
        "requestBody": {
          "description": "The command containing payment details (credit card, amount, etc.)",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessPaymentCommand"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created payment including its ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentProcessedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Returns the error message in case any validation errors occur",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentProcessingFailedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/payments/{id}": {
      "get": {
        "tags": [
          "Payments"
        ],
        "summary": "Allows one to get a specific payment using its ID",
        "operationId": "GetPayment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the payment",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the payment with the corresponding ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPaymentResponse"
                }
              }
            }
          },
          "404": {
            "description": "Returned if no payment with the given ID exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreditCardReadModel": {
        "required": [
          "cardNumber",
          "expiryMonth",
          "expiryTwoDigitYear"
        ],
        "type": "object",
        "properties": {
          "cardNumber": {
            "type": "string",
            "description": "A masked representation of the credit card number",
            "example": "*** *** *** *** 1234"
          },
          "expiryMonth": {
            "maximum": 12,
            "minimum": 1,
            "type": "integer",
            "description": "Month of expiry for the credit card (1-12)",
            "format": "int32",
            "example": 12
          },
          "expiryTwoDigitYear": {
            "maximum": 99,
            "minimum": 0,
            "type": "integer",
            "description": "Year of expiry for the credit card as two digit year",
            "format": "int32",
            "example": 29
          }
        },
        "additionalProperties": false
      },
      "CreditCardWriteModel": {
        "required": [
          "cardNumber",
          "cvv",
          "expiryMonth",
          "expiryTwoDigitYear"
        ],
        "type": "object",
        "properties": {
          "cardNumber": {
            "type": "string",
            "description": "The card number of the credit card",
            "example": "123 123 123 123 1234"
          },
          "expiryMonth": {
            "maximum": 12,
            "minimum": 1,
            "type": "integer",
            "description": "Month of expiry for the credit card (1-12)",
            "format": "int32",
            "example": 12
          },
          "expiryTwoDigitYear": {
            "maximum": 99,
            "minimum": 0,
            "type": "integer",
            "description": "Year of expiry for the credit card as two digit year",
            "format": "int32",
            "example": 29
          },
          "cvv": {
            "type": "integer",
            "description": "The card verification value used to make the payment",
            "format": "int32",
            "example": 123
          }
        },
        "additionalProperties": false
      },
      "GetPaymentResponse": {
        "required": [
          "amount",
          "creditCard",
          "currency",
          "paymentId",
          "status"
        ],
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "string",
            "description": "A unique identifier for the payment",
            "format": "uuid",
            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
          },
          "status": {
            "type": "string",
            "description": "The status of the payment. Can be \"Completed\" or \"Declined\"",
            "example": "Completed"
          },
          "amount": {
            "type": "number",
            "description": "The total amount of the payment",
            "format": "double",
            "example": 9.9
          },
          "currency": {
            "type": "string",
            "description": "The currency used as part of the payment",
            "example": "GBP"
          },
          "creditCard": {
            "$ref": "#/components/schemas/CreditCardReadModel"
          }
        },
        "additionalProperties": false
      },
      "PaymentProcessedResponse": {
        "required": [
          "paymentId",
          "status"
        ],
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "string",
            "description": "A unique identifier for the payment",
            "format": "uuid",
            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
          },
          "status": {
            "type": "string",
            "description": "The status of the payment. Can be \"Completed\" or \"Declined\"",
            "example": "Completed"
          }
        },
        "additionalProperties": false
      },
      "PaymentProcessingFailedResponse": {
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "A message describing the error",
            "example": "The provided credit card number is malformed, expected 16 digits."
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "ProcessPaymentCommand": {
        "required": [
          "amount",
          "creditCard",
          "currency"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "minimum": 0,
            "type": "number",
            "description": "The payment amount of the product/subscription",
            "format": "double",
            "example": 9.9
          },
          "currency": {
            "type": "string",
            "description": "The currency the amount is in. Currently only GBP, EUR and USD are supported.",
            "example": "GBP"
          },
          "creditCard": {
            "$ref": "#/components/schemas/CreditCardWriteModel"
          }
        },
        "additionalProperties": false
      }
    }
  }
}